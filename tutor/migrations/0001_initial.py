# Generated by Django 3.0.5 on 2020-12-22 14:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tutor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddCourses',
            fields=[
                ('s_num', models.AutoField(primary_key=True, serialize=False)),
                ('cid', models.CharField(default='', max_length=5)),
                ('courseName', models.CharField(default='', max_length=100)),
                ('forclass', models.CharField(default='', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='AddFees',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('courseName', models.CharField(default='', max_length=100)),
                ('teachType', models.CharField(default='', max_length=100)),
                ('duration', models.CharField(default='', max_length=100)),
                ('feeDuration', models.CharField(default='', max_length=100)),
                ('no_of_installment', models.CharField(default='', max_length=100)),
                ('feeamt', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AddStudentDetail',
            fields=[
                ('snum', models.AutoField(primary_key=True, serialize=False)),
                ('courseName', models.CharField(default='', max_length=255)),
                ('teachType', models.CharField(default='', max_length=255)),
                ('forclass', models.CharField(default='', max_length=255)),
                ('batch', models.CharField(default='', max_length=255)),
                ('instalment', models.DecimalField(decimal_places=0, default=1, max_digits=2)),
                ('feeDisc', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveTutors',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('tutorCode', models.CharField(default='', max_length=6)),
                ('username', models.CharField(default='', max_length=100)),
                ('firstName', models.CharField(default='', max_length=100)),
                ('lastName', models.CharField(default='', max_length=100)),
                ('email', models.CharField(default='', max_length=70, validators=[django.core.validators.MinLengthValidator(3)])),
                ('password', models.CharField(default='', max_length=20)),
                ('distance', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999)])),
                ('location', models.CharField(default='', max_length=255)),
                ('phone', models.CharField(default='', help_text='Enter 10 digit phone number', max_length=10, validators=[django.core.validators.MinLengthValidator(10)])),
                ('latitude', models.CharField(default='0', max_length=20)),
                ('longitude', models.CharField(default='0', max_length=20)),
                ('availability', models.CharField(default='', max_length=255)),
                ('qualification', models.CharField(default='', max_length=255)),
                ('experience', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('description', models.CharField(default='', max_length=1024)),
                ('gender', models.CharField(default='', help_text='Female/Male', max_length=10)),
                ('courseName', models.CharField(default='', max_length=255, null=True)),
                ('forclass', models.CharField(default='', max_length=255, null=True)),
                ('fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=tutor.models.userImagePath)),
                ('freeDemo', models.DecimalField(decimal_places=0, default=0, max_digits=1)),
                ('avatar', models.DecimalField(decimal_places=0, default=0, max_digits=2)),
                ('teachType', models.CharField(default='', max_length=255)),
                ('instituteName', models.CharField(default='', max_length=255)),
                ('instituteCode', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='BatchTiming',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('batchName', models.CharField(default='', max_length=255)),
                ('days', models.CharField(default='', help_text='Comma seperated', max_length=255)),
                ('startTime', models.CharField(default='', max_length=255)),
                ('endTime', models.CharField(default='', max_length=255)),
                ('original24time', models.CharField(default='', help_text='Comma seperated', max_length=255)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Class', models.CharField(max_length=20)),
                ('Batch', models.CharField(max_length=100)),
                ('Name', models.CharField(max_length=200)),
                ('exam_date', models.DateField()),
                ('exam_time', models.TimeField(blank=True, null=True)),
                ('exam_duration', models.IntegerField(default=0)),
                ('timezone', models.CharField(max_length=200)),
                ('pass_percentage', models.IntegerField()),
                ('reexam_date', models.DateField(blank=True, null=True)),
                ('calculator', models.BooleanField(default=False)),
                ('imgupload', models.BooleanField(default=False)),
                ('negative_marking', models.BooleanField(blank=True, default=False, null=True)),
                ('negative_marks', models.FloatField(blank=True, null=True)),
                ('tandc', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('resultonmail', models.BooleanField(blank=True, default=False, null=True)),
                ('question_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='LoginCoachingCentre',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(default='', max_length=100)),
                ('password', models.CharField(default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('otp', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('user', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SignupCoachingCentre',
            fields=[
                ('s_no', models.AutoField(primary_key=True, serialize=False)),
                ('instituteCode', models.CharField(default='', max_length=6)),
                ('instituteName', models.CharField(default='', max_length=100)),
                ('email', models.CharField(default='', max_length=70, validators=[django.core.validators.MinLengthValidator(3)])),
                ('password', models.CharField(default='', max_length=20)),
                ('phone', models.CharField(default='', help_text='Enter 10 digit phone number', max_length=10, validators=[django.core.validators.MinLengthValidator(10)])),
                ('location', models.CharField(default='', max_length=255)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=tutor.models.ccImage)),
                ('avatar', models.DecimalField(decimal_places=0, default=0, max_digits=2)),
                ('latitude', models.CharField(default='0', max_length=20)),
                ('longitude', models.CharField(default='0', max_length=20)),
                ('showFees', models.BooleanField(default=True)),
                ('emailValidated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SignupStudent',
            fields=[
                ('snum', models.AutoField(primary_key=True, serialize=False)),
                ('studentCode', models.CharField(default='', max_length=6)),
                ('username', models.CharField(default='', max_length=100)),
                ('firstName', models.CharField(default='', max_length=100)),
                ('lastName', models.CharField(default='', max_length=100)),
                ('email', models.CharField(default='', max_length=100)),
                ('password', models.CharField(default='', max_length=20)),
                ('phone', models.CharField(default='', help_text='Enter 10 digit phone number', max_length=10, validators=[django.core.validators.MinLengthValidator(10)])),
                ('location', models.CharField(default='', max_length=255)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=tutor.models.studentImagePath)),
                ('schoolName', models.CharField(default='', max_length=100)),
                ('avatar', models.DecimalField(decimal_places=0, default=0, max_digits=2)),
                ('latitude', models.CharField(default='0', max_length=20)),
                ('longitude', models.CharField(default='0', max_length=20)),
                ('emailValidated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SignupTutor',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('tutorCode', models.CharField(default='', max_length=6)),
                ('username', models.CharField(default='', max_length=100)),
                ('firstName', models.CharField(default='', max_length=100)),
                ('lastName', models.CharField(default='', max_length=100)),
                ('email', models.CharField(default='', max_length=70, validators=[django.core.validators.MinLengthValidator(3)])),
                ('password', models.CharField(default='', max_length=20)),
                ('distance', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999)])),
                ('location', models.CharField(default='', max_length=255)),
                ('phone', models.CharField(default='', help_text='Enter 10 digit phone number', max_length=10, validators=[django.core.validators.MinLengthValidator(10)])),
                ('latitude', models.CharField(default='0', max_length=20)),
                ('longitude', models.CharField(default='0', max_length=20)),
                ('emailValidated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='temp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recc', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='TutorialInstitute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=1000)),
                ('Fees', models.PositiveIntegerField()),
                ('Duration', models.PositiveIntegerField()),
                ('Description', models.TextField()),
                ('Validity', models.DateTimeField()),
                ('Discount', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('Archived', models.BooleanField(default=False)),
                ('Course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorialsinstitute', to='tutor.AddCourses')),
            ],
        ),
        migrations.CreateModel(
            name='TutorialTutors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=1000)),
                ('Fees', models.PositiveIntegerField()),
                ('Duration', models.PositiveIntegerField()),
                ('Description', models.TextField()),
                ('Validity', models.DateTimeField()),
                ('Discount', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('Archived', models.BooleanField(default=False)),
                ('Tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorialstutor', to='tutor.SignupTutor')),
            ],
        ),
        migrations.CreateModel(
            name='ViewTeachingType',
            fields=[
                ('s_num', models.AutoField(primary_key=True, serialize=False)),
                ('cid', models.CharField(default='', max_length=5)),
                ('courseName', models.CharField(default='', max_length=100)),
                ('forclass', models.CharField(default='', max_length=255)),
                ('teachType', models.CharField(default='', max_length=255)),
                ('durationInMonths', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TutorRatings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Posted_On', models.DateField(auto_now_add=True)),
                ('Review', models.TextField()),
                ('Rating', models.PositiveIntegerField()),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentenrolledtutor', to='tutor.SignupStudent')),
                ('Tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorreviews', to='tutor.SignupTutor')),
            ],
            options={
                'ordering': ['-Posted_On'],
            },
        ),
        migrations.CreateModel(
            name='TutorialTutorsPlaylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=1000)),
                ('Description', models.TextField()),
                ('Video', models.FileField(upload_to='playlists')),
                ('tutorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorplaylist', to='tutor.TutorialTutors')),
            ],
        ),
        migrations.CreateModel(
            name='TutorialInstitutePlaylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=1000)),
                ('Description', models.TextField()),
                ('Video', models.FileField(upload_to='playlists')),
                ('tutorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist', to='tutor.TutorialInstitute')),
            ],
        ),
        migrations.CreateModel(
            name='TeachingType',
            fields=[
                ('s_num', models.AutoField(primary_key=True, serialize=False)),
                ('courseName', models.CharField(default='', max_length=100)),
                ('forclass', models.CharField(default='', max_length=255)),
                ('teachType', models.CharField(default='', max_length=255)),
                ('duration', models.CharField(default='', max_length=255)),
                ('timePeriod', models.CharField(default='', max_length=255)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TeachingType', to='tutor.AddCourses')),
            ],
        ),
        migrations.CreateModel(
            name='SubmitFees',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(default='', max_length=255)),
                ('totalFee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('feePayed', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('balanceFee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('instalmentDue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('totalInstallments', models.DecimalField(decimal_places=2, max_digits=10)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='tutor.AddStudentDetail')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_course', to='tutor.AddCourses')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_exam', to='tutor.Exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_mapping', to='tutor.SignupStudent')),
            ],
        ),
        migrations.CreateModel(
            name='StudentExamResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_scored', models.FloatField(default=0)),
                ('total_marks', models.FloatField(default=0)),
                ('total_questions', models.IntegerField(default=0)),
                ('attempted', models.BooleanField(default=False)),
                ('percentage', models.CharField(default='10', max_length=10)),
                ('pass_status', models.BooleanField(default=False)),
                ('time_taken', models.CharField(default=0, max_length=100)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor.Exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor.StudentMapping')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtype', models.CharField(max_length=100)),
                ('question', models.TextField(null=True)),
                ('section', models.CharField(default='A', max_length=10)),
                ('input_ans', models.TextField(default='Not Answered')),
                ('input_ans_Image', models.ImageField(blank=True, null=True, upload_to='input_ans_images/')),
                ('correct_ans', models.TextField()),
                ('marks', models.FloatField()),
                ('check', models.CharField(default='Not Answered', max_length=100)),
                ('level', models.CharField(default='medium', max_length=100)),
                ('marks_given', models.FloatField(default=0)),
                ('time', models.FloatField(default=0)),
                ('extra_time', models.FloatField(default=0)),
                ('negative_marks', models.FloatField()),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor.Exam')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tutor.StudentMapping')),
            ],
        ),
        migrations.CreateModel(
            name='SignupTutorContinued',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('availability', models.CharField(default='', max_length=255)),
                ('qualification', models.CharField(default='', max_length=255)),
                ('experience', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('description', models.CharField(default='', max_length=1024)),
                ('gender', models.CharField(default='', help_text='Female/Male', max_length=10)),
                ('courseName', models.CharField(default='', max_length=255, null=True)),
                ('forclass', models.CharField(default='', max_length=255, null=True)),
                ('fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=tutor.models.userImagePath)),
                ('freeDemo', models.DecimalField(decimal_places=0, default=0, max_digits=1)),
                ('avatar', models.DecimalField(decimal_places=0, default=0, max_digits=2)),
                ('base', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signupTutorContinued', to='tutor.SignupTutor')),
            ],
        ),
        migrations.CreateModel(
            name='ShortAnswerQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('correct_ans', models.TextField(max_length=150)),
                ('marks', models.FloatField()),
                ('question_no', models.IntegerField(default=0)),
                ('level', models.CharField(default='medium', max_length=100)),
                ('negative_marks', models.FloatField()),
                ('section', models.CharField(max_length=10)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oneline_question', to='tutor.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewsTutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Posted_On', models.DateField(auto_now_add=True)),
                ('Review', models.CharField(max_length=2000)),
                ('Rating', models.PositiveIntegerField()),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorreview', to='tutor.SignupStudent')),
                ('Tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Tutorreviews', to='tutor.TutorialTutors')),
            ],
            options={
                'ordering': ['-Posted_On'],
            },
        ),
        migrations.CreateModel(
            name='ReviewsInstitute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Posted_On', models.DateField(auto_now_add=True)),
                ('Review', models.CharField(max_length=2000)),
                ('Rating', models.PositiveIntegerField()),
                ('Institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Institutereviews', to='tutor.TutorialInstitute')),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institutereview', to='tutor.SignupStudent')),
            ],
            options={
                'ordering': ['-Posted_On'],
            },
        ),
        migrations.CreateModel(
            name='PostTution',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('courseName', models.CharField(default='', max_length=255)),
                ('forclass', models.CharField(default='', max_length=255)),
                ('teachingMode', models.CharField(default='', max_length=255)),
                ('genderPreference', models.CharField(default='', help_text='Female/Male', max_length=10)),
                ('whenToStart', models.CharField(default='', max_length=255)),
                ('description', models.CharField(default='', max_length=1024)),
                ('budget', models.CharField(default='', help_text='Hourly/Monthly', max_length=10)),
                ('budgetVal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('numberOfSessions', models.DecimalField(decimal_places=0, default=0, max_digits=4)),
                ('assigned', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('connector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PostTution', to='tutor.SignupStudent')),
            ],
        ),
        migrations.CreateModel(
            name='PostAssignment',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('courseName', models.CharField(default='', max_length=255)),
                ('forclass', models.CharField(default='', max_length=255)),
                ('description', models.CharField(default='', max_length=1024)),
                ('descriptionFile', models.FileField(blank=True, null=True, upload_to=tutor.models.assignmentDescriptionFiles)),
                ('requirement', models.DecimalField(decimal_places=0, max_digits=4)),
                ('budget', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('assigned', models.BooleanField(default=False)),
                ('connector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PostAssignment', to='tutor.SignupStudent')),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=35)),
                ('description', models.TextField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Notice', to='tutor.BatchTiming')),
            ],
        ),
        migrations.CreateModel(
            name='NotesTutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.FileField(upload_to='notes/Institute')),
                ('title', models.CharField(max_length=2000)),
                ('subject', models.CharField(max_length=3000)),
                ('description', models.TextField()),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutornotes', to='tutor.SignupTutor')),
            ],
        ),
        migrations.CreateModel(
            name='NotesInstitute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.FileField(upload_to='notes/Institute')),
                ('title', models.CharField(max_length=2000)),
                ('subject', models.CharField(max_length=3000)),
                ('description', models.TextField()),
                ('center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='centernotes', to='tutor.SignupCoachingCentre')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('correct_ans', models.CharField(max_length=1000)),
                ('marks', models.FloatField()),
                ('question_no', models.IntegerField(default=0)),
                ('level', models.CharField(default='medium', max_length=100)),
                ('negative_marks', models.FloatField(default=0)),
                ('section', models.CharField(default='A', max_length=10)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_question', to='tutor.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(max_length=150)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='tutor.MultipleQuestion')),
            ],
        ),
        migrations.CreateModel(
            name='MakeAppointment',
            fields=[
                ('dateTime', models.DateTimeField()),
                ('duration', models.DurationField()),
                ('timezone', models.CharField(default='', max_length=35)),
                ('recc', models.BooleanField(help_text='Reccurance')),
                ('pattern', models.CharField(default='', help_text='D-Daily/W=Weekly', max_length=2, null=True)),
                ('repeat', models.DecimalField(decimal_places=0, default=-1, max_digits=3, null=True)),
                ('days', models.CharField(default='', max_length=50, null=True)),
                ('endingDate', models.DateField(null=True)),
                ('daysDump', models.TextField()),
                ('utcDateTime', models.DateTimeField()),
                ('utcEndingDate', models.DateField(null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=0, default=0, max_digits=1)),
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.CharField(default='', max_length=50)),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='MakeAppointment', to='tutor.SignupStudent')),
                ('tutor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='MakeAppointment', to='tutor.SignupTutor')),
            ],
        ),
        migrations.CreateModel(
            name='LongAnswerQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('level', models.CharField(default='medium', max_length=100)),
                ('correct_ans', models.TextField(max_length=350)),
                ('marks', models.FloatField()),
                ('question_no', models.IntegerField(default=0)),
                ('negative_marks', models.FloatField()),
                ('section', models.CharField(max_length=10)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjective_question', to='tutor.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='InstituteRatings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Posted_On', models.DateField(auto_now_add=True)),
                ('Review', models.TextField()),
                ('Rating', models.PositiveIntegerField()),
                ('Institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Coachingreviews', to='tutor.SignupCoachingCentre')),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentenrolledinstitute', to='tutor.SignupStudent')),
            ],
            options={
                'ordering': ['-Posted_On'],
            },
        ),
        migrations.CreateModel(
            name='Instalment',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('instalmentNum', models.DecimalField(decimal_places=0, max_digits=3)),
                ('paymentExp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paymentDone', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
                ('feeObj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Instalment', to='tutor.SubmitFees')),
            ],
        ),
        migrations.AddField(
            model_name='exam',
            name='center',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='centername', to='tutor.SignupCoachingCentre'),
        ),
        migrations.AddField(
            model_name='exam',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='tutor.AddCourses'),
        ),
        migrations.CreateModel(
            name='enrollTutors',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('instituteName', models.CharField(default='', max_length=255)),
                ('instituteCode', models.CharField(default='', max_length=255)),
                ('signUp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollTutors', to='tutor.SignupTutor')),
            ],
        ),
        migrations.CreateModel(
            name='BooleanQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('option1', models.CharField(blank=True, max_length=1000, null=True)),
                ('option2', models.CharField(blank=True, max_length=1000, null=True)),
                ('correct_ans', models.CharField(max_length=1000)),
                ('marks', models.FloatField()),
                ('question_no', models.IntegerField(default=0)),
                ('level', models.CharField(default='medium', max_length=100)),
                ('negative_marks', models.FloatField()),
                ('section', models.CharField(max_length=10)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boolean_question', to='tutor.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='BatchTimingTutor',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('batchName', models.CharField(default='', max_length=255)),
                ('days', models.CharField(default='', help_text='Comma seperated', max_length=255)),
                ('startTime', models.CharField(default='', max_length=255)),
                ('endTime', models.CharField(default='', max_length=255)),
                ('original24time', models.CharField(default='', help_text='Comma seperated', max_length=255)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('StartDate', models.DateTimeField()),
                ('EndDate', models.DateTimeField()),
                ('Tutor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BatchTutor', to='tutor.SignupTutor')),
            ],
        ),
        migrations.AddField(
            model_name='batchtiming',
            name='coachingCenter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BatchTiming', to='tutor.SignupCoachingCentre'),
        ),
        migrations.CreateModel(
            name='ArchiveStudents',
            fields=[
                ('snum', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(default='', max_length=100)),
                ('instituteName', models.CharField(default='', max_length=255)),
                ('instituteCode', models.CharField(default='', max_length=255)),
                ('addStudentDetail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ArchiveStudents', to='tutor.AddStudentDetail')),
                ('conector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ArchiveStudents', to='tutor.SignupStudent')),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveFees',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('courseName', models.CharField(default='', max_length=100)),
                ('forclass', models.CharField(default='', max_length=255)),
                ('teachType', models.CharField(default='', max_length=255)),
                ('duration', models.CharField(default='', max_length=255)),
                ('fee_amt', models.CharField(default='', max_length=100)),
                ('tax', models.CharField(default='', max_length=100)),
                ('final_amt', models.CharField(default='', max_length=100)),
                ('no_of_installment', models.CharField(default='', max_length=100)),
                ('typeOfCharge', models.DecimalField(decimal_places=0, help_text='0-> percent || 1-> amount || else-> error', max_digits=1)),
                ('extra_charge', models.CharField(default='', max_length=255)),
                ('final_amount', models.DecimalField(decimal_places=6, max_digits=10)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ArchiveFees', to='tutor.AddCourses')),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveCourses',
            fields=[
                ('sn', models.AutoField(primary_key=True, serialize=False)),
                ('crid', models.CharField(default='', max_length=5)),
                ('crName', models.CharField(default='', max_length=100)),
                ('crclass', models.CharField(default='', max_length=150)),
                ('coachingCentre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ArchiveCourses', to='tutor.SignupCoachingCentre')),
            ],
        ),
        migrations.CreateModel(
            name='AddTutorsInst',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseTaught', models.CharField(default='', max_length=100)),
                ('forclass', models.CharField(default='', max_length=255)),
                ('teachType', models.CharField(default='', max_length=255)),
                ('availability', models.DecimalField(decimal_places=0, default=0, help_text='0=>nothing,1=>weekly,2=>weekend,3=>both', max_digits=1)),
                ('cid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tutor_cid', related_query_name='tutor_cid', to='tutor.SignupCoachingCentre')),
                ('username', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AddTutorsInst', to='tutor.enrollTutors')),
            ],
        ),
        migrations.CreateModel(
            name='AddStudentInst',
            fields=[
                ('snum', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(default='', max_length=100)),
                ('instituteName', models.CharField(default='', max_length=255)),
                ('instituteCode', models.CharField(default='', max_length=255)),
                ('conector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AddStudentInst', to='tutor.SignupStudent')),
            ],
        ),
        migrations.AddField(
            model_name='addstudentdetail',
            name='username',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AddStudentDetail', related_query_name='AddStudentDetail', to='tutor.AddStudentInst'),
        ),
        migrations.CreateModel(
            name='AddFeesC',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('courseName', models.CharField(default='', max_length=100)),
                ('forclass', models.CharField(default='', max_length=255)),
                ('teachType', models.CharField(default='', max_length=255)),
                ('duration', models.CharField(default='', max_length=255)),
                ('fee_amt', models.CharField(default='', max_length=100)),
                ('tax', models.CharField(default='', max_length=100)),
                ('final_amt', models.CharField(default='', max_length=100)),
                ('no_of_installment', models.CharField(default='', max_length=100)),
                ('typeOfCharge', models.DecimalField(decimal_places=0, help_text='0-> percent || 1-> amount || else-> error', max_digits=1)),
                ('extra_charge', models.CharField(default='', max_length=255)),
                ('feeDisc', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('discValidity', models.DateTimeField(default=django.utils.timezone.now)),
                ('final_amount', models.DecimalField(decimal_places=6, max_digits=10)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AddFeesC', to='tutor.AddCourses')),
            ],
        ),
        migrations.AddField(
            model_name='addcourses',
            name='coachingCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AddCourses', to='tutor.SignupCoachingCentre'),
        ),
    ]
